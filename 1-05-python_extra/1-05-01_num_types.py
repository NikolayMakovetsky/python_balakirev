print("-----экспоненциальная запись числа в Python-----")

# экспоненциальная запись числа
# 500 = 5e2 = 5*(10^2)
# 0.01 = 1e-2 = 1*(10^-2)
 
number = 12345.6789
print("{:e}".format(number))        # 1.234568e+04
print("{:.0e}".format(number))      # 1e+04
print("{:.1e}".format(number))      # 1.2e+04
print("-----")
print(f"{number:e}")        # 1.234568e+04
print(f"{number:.0e}")      # 1e+04
print(f"{number:.1e}")      # 1.2e+04

print("-----запись чисел в двоичной системе-----")
# 1101 = 1*2^3 + 1*2^2 + 0*2^1 + 1*2^0 = 13

a = 0b001
b = 0b1101
c = 0b10001101
d = -0b1111 # унарный минус перед числом

print(b, bin(b))

# бывают ситуации, например, работа с числами на уровне бит,
# когда нам требуется включить или выключить отдельный бит числа,
# или проверить является ли текущий бит
# равным 1 (то есть включенным) или 0 (выключенным).
# Здесь двоичное представление нам помогает визуализировать такой процесс.

print("-----запись чисел в шестнадцатиричной системе-----")
# C2DE = C*16^3 + 2*16^2 + D*16^1 + E*16^0 = 49886

# В чем ценность шестнадцатеричной системы счисления?
# Она получила широкое распространение благодаря удобному представлению байтовых данных.

# --------------1 байт-------------------
# бит1 бит2 бит3 бит4 бит5 бит6 бит7 бит8
#  1    0    0    1     1    1    0    1   # два числа в 2-x системе
# ------------------  -------------------
#          9                  D            # число в 16-x системе

a = 0x1A
b = 0xde
c = 0xaa3f
d = -0x342

print(a, hex(a))

print("-----запись чисел в восьмеричной системе-----")
# 775 = 7*8^2 + 7*8^1 + 5*8^0 = 509

a = 0o27
b = 0o54
c = -0o775
print(a, oct(a))