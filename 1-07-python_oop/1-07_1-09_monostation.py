print("\n---Паттерн моносостояние")

# Представьте, что у нас некий многопоточный процесс
# и в каждом потоке создается свой экземпляр класса ThreadData.
# Но нам бы хотелось, чтобы все они имели единые локальные свойства


class ThreadData: # потоковые данные
    # общие атрибуты (приватный словарь с некими начальными свойствами)
    __shared_attrs = {
        'name': 'thread_1',
        'data': {},
        'id': 1,
    }
 
    def __init__(self):
        self.__dict__ = self.__shared_attrs

# Я напомню, что список локальных свойств каждого конкретного экземпляра класса
# определяется словарем __dict__ и если у всех объектов он будет един,
# то едины окажутся и их локальные свойства.

th1 = ThreadData()
th2 = ThreadData()

print(th1.__dict__)
print(th2.__dict__)

th1.attr_new = 'new attr'
th2.id = 3

print(th1.__dict__)
print(th2.__dict__)

