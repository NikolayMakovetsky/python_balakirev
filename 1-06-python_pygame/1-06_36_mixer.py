#  Модуль pygame.mixer служит для работы со звуковыми эффектами, например,
#  выдавать звук при столкновениях, ловле профитов, начисления очков и т.п.
#  Данный модуль поддерживает многоканальный звук,
#  т.е. одновременное воспроизведение нескольких звуковых дорожек

# Инициализация модуля (для этого есть 2 функции)

# pre_init(frequency=44100, size=-16, channels=2, buffer=512, devicename=None)
# init(frequency=44100, size=-16, channels=2, buffer=512, devicename=None, allowedchanges=AUDIO_ALLOW_FREQUENCY_CHANGE | AUDIO_ALLOW_CHANNELS_CHANGE)
# frequency           | частота воспроизведения звуковых файлов
# size                | число бит для представления аудио данных (знак минус говорит, что используются знаковые числа)
# channels            | число каналов
# buffer              | размер буфера (в байтах)
# allowedchanges      | дополнительные флаговые настройки

# Функция init вызывается автоматически при инициализации Pygame: pygame.init() но с аргументами по умолчанию
# Если нужно поменять эти параметры, то следует до pygame.init вызвать метод pygame.pre_init() с нужным набором параметров

# !!!Мало того, как мы увидим, вызов pre_init устраняет один из неприятных эффектов – задержку в воспроизведении звуков!!!

# Итак, у миксера также есть похожий набор функций для останова и пауз:
# stop() – остановить вопроизведение
# pause() – пауза воспроизведения
# unpause() – снятие с паузы

# Загрузка и воспроизведение звуковых файлов
# выполняется с помощью класса: pygame.mixer.Sound(filename)
# Здесь filename – это звуковой файл в формате "wav" или "ogg"
# Обратите внимание, класс Sound не поддерживает файлы в формате "mp3"!!!

# Итак, чтобы загрузить какой-либо звуковой эффект, достаточно выполнить вот такую строчку:
s = pygame.mixer.Sound("sounds/catch.ogg")

# И, далее, уже через переменную s можем работать с воспроизведение данного эффекта.
# Класс Sound поддерживает такие основные методы:
# play(loops=0, maxtime=0, fade_ms=0)     | воспроизведение звука
# stop()                                  | останов воспроизведения
# set_volume(value)                       | настройка громкости звучания
# get_volume()                            | возвращает текущее значение громкости (число от 0 до 1)

