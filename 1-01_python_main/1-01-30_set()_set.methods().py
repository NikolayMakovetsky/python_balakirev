print("------------------------SET()-----------------------------")
print("set() is unordered collection of unic elements")
print("set() elements is only immutable (unchangeable) data types")
print("we can't use index to find set element because of set is unordered collection")

print("\n--------------------------------------HOW TO CREATE SET()---------------------------------------")
dct = {1: "one", "twotwo": 22, "lst": [5, 6]}
print(f"dct = {dct}  // dictionary elements written in curly braces")
print("\n------in set() you can use: NUMBERS, STRINGS, TUPLES, BOOL TYPE, because it's immutable data types")
a = {1, 2.56, "hi", True, (3,  3)}
print("a = {1, 2.56, \"hi\", True, (3,  3)}        // text in program")
print(f"a = {a}       :result // set instead of dict has no keys, even the curly braces looks the same")
print("                                         // set() could have only unic elements...1 and True is the same !!!")
print("                                         // so the set() saved only first of this elements for unic collection")
a = {2, 2.56, "hi", True, (3,  3)}
print(f"a = {a}        // in this case we from the start have only unic elements in set(). It's OK!")
print("\n------in set() you can't use: LISTS, DICTS, OTHER SETS because it's mutable data types")
print("a = {1, 2, \"hi\", [True, False]}              // TypeError: unhashable type: 'list'")
print("a = {1, 2, \"hi\", {True, 1}}                  // TypeError: unhashable type: 'set'")
print("a = {1, 2, \"hi\", {True: 1}}                  // TypeError: unhashable type: 'dict'")

print("\n--------------------------------------HOW TO CREATE EMPTY SET()---------------------------------------")
st = set()
print(f"st = {st}, type(st) = {type(st)}   // this is the only way !!!")
b = {}
print(f"b = {b}, type(b) = {type(b)}       // in this case the result will be a dictionary")

print("\n-----------------------------------HOW TO CREATE NONEMPTY SET()-------------------------------------")
print("ALL DUPLICATES ARE DISCARDED (DELETED) !")
st = set([1, 2, 2, 0, 1])
print(f"st = set([1, 2, 2, 0, 1])  ->  st = {st}")
st = set(range(5))
print(f"st = set(range(5))         ->  st = {st}")
st = set("abrar")
print(f"st = set(\"abrar\")          ->  st = {st}")

print("\n-----------------SET() IS GOOD TO DELETE DUPLICATES IN LIST-------------------------------------")
lst1 = [1, 1, 2, 2, 1, 2]
lst2 = list(set(lst1))
print(f"lst1                    ->  {lst1}")
print(f"lst2 = list(set(lst1))  ->  {lst2}")

print("\n-----------------ITERATING SET() USING FOR LOOP-------------------------------------")
st = set("fgryuwls")
print(f"st = {st}")
for s in st:
    print(s, end=" ")

print("\n-----------------ITERATING SET() USING ITERATOR------------------------------------")
st = set("12345678")
print(f"st = {st}")
it = iter(st)
print(next(it), next(it), next(it), next(it), next(it), next(it), next(it), next(it))

print("\n---------------------------LEN()------------------------------------")
st = set("1234")
print(f"st = {st}")
print(f"len(st) = {len(st)}")

print("\n---------------------------OPERATOR IN------------------------------------")
st = set([1, 2, 3, 4])
print(f"st = {st}")
print(f"1 in st = {1 in st}")
print(f"\'1\' in st = {'1' in st}")
print(f"5 in st = {5 in st}")

print("\n---------------------------.ADD()-----------------------------------")
print("added 1 element to the set()")
st = set([1, 2, 3, 4])
print(f"st = {st}")
st.add(5)
print(f"st = {st}     // after line: st.add(5)")
print("                         // we can't add the same value second time because set() is a unic collection")
st.add(5)
print(f"st = {st}     // after line: st.add(5)")

print("\n------------------------.UPDATE(any iterable object)------------------------------")
print("added 1+ elements to the set()")
st = set("qw")
print(f"st = {st}")
st.update("zx")
print(f"st = {st}")
st.update((1, 2))
print(f"st = {st}")
st.update([3, 4])
print(f"st = {st}")

print("\n------------------------.DISCARD()------------------------------")
print("delete 1 element from set")
st = set("qwer")
print(f"st = {st}")
st.discard('q')
print(f"st = {st}")
st.discard('A')
print(f"st = {st}    //  after line: st.discard(\'A\')")

print("\n------------------------.REMOVE()------------------------------")
print("delete 1 element from set")
print("if element is not in set - return ERROR  // this is the only difference with .DISCARD()")
st = set([5, 6, 7])
print(f"st = {st}")
st.remove(5)
print(f"st = {st}")
print(f"st.remove(1)  ->  KeyError: 1")

print("\n------------------------.POP()------------------------------")
print("delete and return random set element")
st = set([5, 6, 7, 8])
print(f"st = {st}")
print(f"st.pop() = {st.pop()}")
print(f"st = {st}")
st22 = set()
print(f"st22 = {st22}")
print(f"st22.pop() = KeyError: \'pop from an empty set\'")

print("\n------------------------.CLEAR()------------------------------")
st = set([5, 6, 7, 8])
print(f"st = {st}")
st.clear()
print(f"st = {st}   after line: st.clear()")
